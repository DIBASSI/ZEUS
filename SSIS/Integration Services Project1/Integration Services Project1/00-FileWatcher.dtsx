<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/26/2020 11:46:36 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="EGT006"
  DTS:CreatorName="EGT006\mdibassi"
  DTS:DelayValidation="True"
  DTS:DTSID="{3CFA3343-C7A4-4A66-BACB-8B99D581C55D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="1033"
  DTS:ObjectName="00-FileWatcher"
  DTS:PackageType="5"
  DTS:VersionBuild="67"
  DTS:VersionGUID="{2492A443-ABEB-4C46-9295-074A236F83D8}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05E1A3B1-99AF-4C8C-8723-1C16B86FD159}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Exists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A7BD9502-55C8-4C23-8F35-CFAEB2787755}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Extension">
      <DTS:VariableValue
        DTS:DataType="8">.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{44E34620-991A-49F2-935B-6B903FB98B7A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1A29311A-DA43-4201-8642-40CF7FE137CB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ParamFile">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{75134D3F-051E-477C-BB86-12A36922AB9D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourcePath">
      <DTS:VariableValue
        DTS:DataType="8">folder to watch</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Folder"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EB76ECAA-51DF-4432-ADFD-486CDC4C8D65}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Folder">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{B07AA52B-9E9B-4F32-82EC-72D97328C671}"
        DTS:ObjectName="{B07AA52B-9E9B-4F32-82EC-72D97328C671}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::ParamFile" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Folder\02-Moove To Work or Anomalie"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Tâche d'exécution de package"
          DTS:Disabled="True"
          DTS:DTSID="{3C2EFDF9-986A-41E9-98D7-EC5817E52581}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="02-Moove To Work or Anomalie"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>02-Moove Archive Files.dtsx</PackageName>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Folder\Launch Main's Job"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{2A5ABCFB-9AEF-4565-B2CF-A5F63F8293FC}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Launch Main's Job"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Folder\SQLT004 | File - Folder Status"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tâche d'exécution de requêtes SQL"
          DTS:Disabled="True"
          DTS:DTSID="{B0B4EBFA-7992-49B1-A08D-BA9764DC9DBE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQLT004 | File - Folder Status"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A2BF96C7-52F8-42A8-B82C-80A8495740C2}"
              SQLTask:SqlStatementSource="DECLARE @v_BatchLogID bigint = ?&#xA;&#xA;UPDATE  I&#xA; SET I.ImportStatus= &#xA;      (CASE WHEN PF.ID IS NOT NULL AND I2.ImportID IS NULL THEN 'InProgress' --OK et jamais chargé   &#xA;   WHEN PF.ID IS NOT NULL AND I2.ImportID IS NOT NULL THEN 'OK_DWH'  --Deja chargé&#xA;    ELSE 'KO' END )--'KO' &#xA;  FROM [audit].[Import] I&#xA;  LEFT JOIN [ref].[t_Param_File] PF ON I.Importname=PF.Masque+PF.Extension &#xA;  LEFT JOIN [audit].[Import] I2 ON I2.BatchLogID&lt;&gt;@v_BatchLogID AND I.Importname=I2.Importname AND I2.ImportStatus='OK'&#xA;  WHERE I.BatchLogID=@v_BatchLogID&#xA;&#xA;  /* Get Package Metadata ID */&#xA;IF EXISTS (SELECT 1 FROM [audit].[Import] WHERE ImportStatus = 'KO' AND BatchLogID = @v_BatchLogID)&#xA; BEGIN&#xA;  UPDATE [audit].[Import] SET [BatchtStatus] = 'KO'  WHERE BatchLogID = @v_BatchLogID&#xA;  SELECT TOP 1 ImportStatus AS BatchStatus FROM [audit].[Import] WHERE ImportStatus = 'KO' AND BatchLogID = @v_BatchLogID&#xA; END&#xA;/* Get Package Metadata ID */&#xA;ELSE IF EXISTS (SELECT 1 FROM [audit].[Import] WHERE ImportStatus = 'OK_DWH' AND BatchLogID = @v_BatchLogID)&#xA; BEGIN&#xA;  UPDATE [audit].[Import] SET [BatchtStatus] = 'OK_DWH'  WHERE BatchLogID = @v_BatchLogID&#xA;  SELECT TOP 1 ImportStatus AS BatchStatus FROM [audit].[Import] WHERE ImportStatus = 'OK_DWH' AND BatchLogID = @v_BatchLogID&#xA; END&#xA;/* Get Package Metadata ID */&#xA;ELSE IF EXISTS (SELECT 1 FROM [audit].[Import] WHERE ImportStatus = 'InProgress' AND BatchLogID = @v_BatchLogID)&#xA; BEGIN&#xA;  UPDATE [audit].[Import] SET [BatchtStatus] = 'InProgress'  WHERE BatchLogID = @v_BatchLogID&#xA;  SELECT TOP 1 ImportStatus AS BatchStatus FROM [audit].[Import] WHERE ImportStatus = 'InProgress' AND BatchLogID = @v_BatchLogID&#xA; END&#xA;&#xA;&#xA;&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::BatchStatus" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::BatchLogID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="255" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Folder\Tâche de script"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Tâche de script"
          DTS:DTSID="{F267ABE1-C462-405D-B533-4ED4A70E9963}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Tâche de script"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2ff7dfe097884a249aabebef796cd5a8"
              VSTAMajorVersion="2"
              VSTAMinorVersion="2"
              Language="CSharp"
              ReadOnlyVariables="User::SourcePath"
              ReadWriteVariables="User::Exists">
              <ProjectItem
                Name="ST_2ff7dfe097884a249aabebef796cd5a8.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CFB2BF5B-3568-404B-96AF-A9111FBA2EF9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_2ff7dfe097884a249aabebef796cd5a8</RootNamespace>
    <AssemblyName>ST_2ff7dfe097884a249aabebef796cd5a8</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2ff7dfe097884a249aabebef796cd5a8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2ff7dfe097884a249aabebef796cd5a8")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_2ff7dfe097884a249aabebef796cd5a8
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            SqlConnection myADONETConnection = new SqlConnection();
            myADONETConnection = (SqlConnection)(Dts.Connections["ADOZEUS"].AcquireConnection(Dts.Transaction) as SqlConnection);
            //MessageBox.Show(myADONETConnection.ConnectionString, "ADO.NET Connection");
            string DirPath = Dts.Variables["User::SourcePath"].Value.ToString();
            string[] fileNames = Directory.GetFiles(DirPath, "*.csv");
            if (fileNames.Length != 0)
            {
                // TODO: Add your code here

                SqlCommand sqlCmd = new SqlCommand();
                sqlCmd.Connection = myADONETConnection;

                Dts.Variables["Exists"].Value = true;

                foreach (string fileName in fileNames)
                {
                    /*  do you process for each file here */

                    FileInfo file = new FileInfo(fileName);

                        sqlCmd.CommandText = "INSERT INTO [audit].[TransfertFile]" +
                                           "([TransfertFilename]" +
                                           ",[SourcePath]" +
                                           ",[TransfertFileCreatedDateTime]" +
                                           ",[TransfertFileLastModifieddDateTime]" +
                                           ",[StartDateTime]" +
                                           ",[TransfertFileStatus]" +
                                           ",[TransfertFileSize])" +
                                        "Values('"
                                            + file.Name +
                                            "','" + DirPath +
                                            "','" + file.CreationTime.ToString("yyyy-MM-dd HH:mm tt") +
                                            "','" + file.LastWriteTime.ToString("yyyy-MM-dd HH:mm tt") +
                                            "','" + DateTime.Now.ToString("yyyy-MM-dd HH:mm tt") +
                                            "','" + "NA" +
                                            "','" + file.Length / 1024 + "')";
                    //MessageBox.Show(sqlCmd.CommandText);
                   sqlCmd.ExecuteNonQuery();
                }
            }
            else
            {
                Dts.Variables["Exists"].Value = true;
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_2ff7dfe097884a249aabebef796cd5a8</msb:CodeName>
		<msb:DisplayName>ST_2ff7dfe097884a249aabebef796cd5a8</msb:DisplayName>
		<msb:ProjectId>{088059A3-7AC5-40AF-9CC0-EBCAD4262A84}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_2ff7dfe097884a249aabebef796cd5a8.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="0b78062e76ae41ecbeac2efb6890290f">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>110</msb:LineNumber>
			<msb:Condition>
      </msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2ff7dfe097884a249aabebef796cd5a8.Properties.Settings.get_Default():ST_2ff7dfe097884a249aabebef796cd5a8.Properties.Sett" +
    "ings")]

namespace ST_2ff7dfe097884a249aabebef796cd5a8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2ff7dfe097884a249aabebef796cd5a8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2ff7dfe097884a249aabebef796cd5a8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2ff7dfe097884a249aabebef796cd5a8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2ff7dfe097884a249aabebef796cd5a8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2ff7dfe097884a249aabebef796cd5a8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_2ff7dfe097884a249aabebef796cd5a8.dll">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
TAMJACQFAQARACQFBgAZACQFCgApACQFEAAxACQFEAA5ACQFEABBACQFEABJACQFEABRACQFEABZ
ACQFEABhACQFEABpACQFBgChACQFBgDJACQFFQDZACQFBgB5ACQFBgBxAC4GLADhABYGMQDpABgE
NgDhAHYEPADxAKcEQADhAPYFRQD5ABgESgABATgDPACpAGwDUQAJAQQGVQCBACQFBgCBAJgEXAAB
AUIDYgCJACQFEAAZAcwAUQAZAfAAZwCRAGwDbAAZAd4AZwCRAJMGcQCJAHUDdgApAUQGegAxAYMG
EAAxAagGgADhAF4GAQBxACQFBgCpACQFBgA5AboAhAA5AZsGjQCxACQFkwDRACQFBgAIABQArQAI
ABgAsgApAHMAGgEuAAsA8gAuABMA+wAuABsAGgEuACMAIwEuACsATAEuADMATAEuADsATAEuAEMA
IwEuAEsAUgEuAFMATAEuAFsAaQFDAGMAsgBJAHMAGgFhAHsAsgBjAGsAsgAbAAMAAQAEAAMAAAAC
BeMAAABOAegAAABWBu0AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAABEHWmnAAAAAAAA
BwAAAAQAAAAAAAAAAAAAAJsAcQAAAAAADQAAAAAAAAAAAAAApACAAwAAAAAEAAAAAAAAAAAAAACb
AGUAAAAAAAQAAAAAAAAAAAAAAJsAIQQAAAAADQAAAAAAAAAAAAAApAA+AAAAAAAAAAAAAQAAAHUF
AAAFAAIAAAAAAABJbnQ2NABTVF8yZmY3ZGZlMDk3ODg0YTI0OWFhYmViZWY3OTZjZDVhOAA8TW9k
dWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lz
dGVtLkRhdGEAbXNjb3JsaWIARGJDb21tYW5kAFNxbENvbW1hbmQAZGVmYXVsdEluc3RhbmNlAFZh
cmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9OYW1lAERhdGVU
aW1lAGdldF9MYXN0V3JpdGVUaW1lAGdldF9DcmVhdGlvblRpbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2
YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAGdldF9MZW5ndGgATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzJmZjdk
ZmUwOTc4ODRhMjQ5YWFiZWJlZjc5NmNkNWE4LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNv
dXJjZU1hbgBCb29sZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AZ2V0X1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAHNldF9Db25uZWN0
aW9uAEFjcXVpcmVDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEZp
bGVJbmZvAEN1bHR1cmVJbmZvAEZpbGVTeXN0ZW1JbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIAQ29u
bmVjdGlvbk1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMmZmN2RmZTA5Nzg4NGEy
NDlhYWJlYmVmNzk2Y2Q1YTguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNUXzJmZjdkZmUwOTc4ODRhMjQ5YWFiZWJlZjc5NmNkNWE4LlByb3BlcnRpZXMAZ2V0
X1ZhcmlhYmxlcwBHZXRGaWxlcwBTZXR0aW5ncwBnZXRfQ29ubmVjdGlvbnMAU3VjY2VzcwBnZXRf
RHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3Vs
dABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAc2V0X0NvbW1hbmRUZXh0AGdldF9Ob3cAZ2V0X0Fzc2Vt
Ymx5AEV4ZWN1dGVOb25RdWVyeQBEaXJlY3RvcnkAAAAAD0EARABPAFoARQBVAFMAACFVAHMAZQBy
ADoAOgBTAG8AdQByAGMAZQBQAGEAdABoAAALKgAuAGMAcwB2AAANRQB4AGkAcwB0AHMAAIGXSQBO
AFMARQBSAFQAIABJAE4AVABPACAAWwBhAHUAZABpAHQAXQAuAFsAVAByAGEAbgBzAGYAZQByAHQA
RgBpAGwAZQBdACgAWwBUAHIAYQBuAHMAZgBlAHIAdABGAGkAbABlAG4AYQBtAGUAXQAsAFsAUwBv
AHUAcgBjAGUAUABhAHQAaABdACwAWwBUAHIAYQBuAHMAZgBlAHIAdABGAGkAbABlAEMAcgBlAGEA
dABlAGQARABhAHQAZQBUAGkAbQBlAF0ALABbAFQAcgBhAG4AcwBmAGUAcgB0AEYAaQBsAGUATABh
AHMAdABNAG8AZABpAGYAaQBlAGQAZABEAGEAdABlAFQAaQBtAGUAXQAsAFsAUwB0AGEAcgB0AEQA
YQB0AGUAVABpAG0AZQBdACwAWwBUAHIAYQBuAHMAZgBlAHIAdABGAGkAbABlAFMAdABhAHQAdQBz
AF0ALABbAFQAcgBhAG4AcwBmAGUAcgB0AEYAaQBsAGUAUwBpAHoAZQBdACkAVgBhAGwAdQBlAHMA
KAAnAAEHJwAsACcAASd5AHkAeQB5AC0ATQBNAC0AZABkACAASABIADoAbQBtACAAdAB0AAERJwAs
ACcATgBBACcALAAnAAEFJwApAAFxUwBUAF8AMgBmAGYANwBkAGYAZQAwADkANwA4ADgANABhADIA
NAA5AGEAYQBiAGUAYgBlAGYANwA5ADYAYwBkADUAYQA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAADhz72TrylpQrE/0XhUVLDUAAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARFhEAcIEj0OHQ4SQR0OCBJFEUkEIAAScQQgABJ1BSABEnkcAyAAHAQgARwcBCAAEn0GIAES
gIEcAyAADgYAAh0ODg4FIAEBEj0EIAEBHAQgABFJBCABDg4EAAARSQMgAAoFAAEOHRwDIAAICAAB
EoCdEYChBSAAEoClByACAQ4SgKUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSWQMGEl0D
BhIQAgYIAwYRFAQAABJZBAAAEl0FAAEBEl0EAAASEAMAAAEECAASWQQIABJdBAgAEhAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzJmZjdkZmUw
OTc4ODRhMjQ5YWFiZWJlZjc5NmNkNWE4AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABsMwAAAAAAAAAAAACGMwAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAeDMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAaadEHQAAAQBpp0QdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwAyAGYAZgA3AGQAZgBlADAAOQA3ADgAOAA0AGEAMgA0ADkAYQBhAGIAZQBiAGUAZgA3
ADkANgBjAGQANQBhADgAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwA0ADkAMgAuADQAMgA4ADUANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwAyAGYAZgA3AGQAZgBlADAAOQA3ADgAOAA0AGEAMgA0ADkAYQBhAGIAZQBiAGUAZgA3ADkA
NgBjAGQANQBhADgALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADIAZgBmADcAZABmAGUAMAA5ADcAOAA4ADQAYQAyADQAOQBhAGEAYgBlAGIA
ZQBmADcAOQA2AGMAZAA1AGEAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwAyAGYAZgA3AGQAZgBlADAAOQA3ADgAOAA0AGEAMgA0ADkAYQBhAGIAZQBiAGUA
ZgA3ADkANgBjAGQANQBhADgAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcANAA5ADIALgA0ADIAOAA1ADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANAA5ADIALgA0ADIAOAA1ADcAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAmDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="110"
                Column="17" />
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="110"
                Column="17" />
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Folder.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{3E79B341-A894-4852-B81F-2FF2EEE5CD3A}"
          DTS:From="Package\Foreach Folder\Tâche de script"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Folder\SQLT004 | File - Folder Status" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Folder.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{486CDC57-93A3-4113-95B7-B99553EF57D9}"
          DTS:Expression="@[User::ImportStatut]==&quot;KO&quot;"
          DTS:From="Package\Foreach Folder\SQLT004 | File - Folder Status"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Folder\02-Moove To Work or Anomalie" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Folder.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{5934DD21-C08E-4787-815B-1C8B7A7D96B4}"
          DTS:EvalOp="3"
          DTS:Expression="&quot;R&quot;==&quot;R&quot;"
          DTS:From="Package\Foreach Folder\02-Moove To Work or Anomalie"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Folder\Launch Main's Job" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{157C0023-DD3B-410D-9689-E52CB0B5D2BD}"
          DTS:ObjectName="{157C0023-DD3B-410D-9689-E52CB0B5D2BD}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::SourcePath" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{192E27FA-20DC-405A-8145-8055B8B461AD}"
          DTS:ObjectName="{192E27FA-20DC-405A-8145-8055B8B461AD}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::Extension" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Folders"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1BCBB2DB-7698-46F2-BBB7-F763342BEEFB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Folders"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C5D56B8E-EEC6-44A9-B11D-EFA892395559}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [audit].[TransfertFile]&#xA;&#xA;SELECT DISTINCT [InPutFolder],[Extension]&#xA;  FROM [ref].[t_Param_File]&#xA;  --ORDER BY Priorite DESC&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ParamFile" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{BF7F7C28-02A4-4505-B52D-9CD16F5333EF}"
      DTS:From="Package\Get Folders"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Folder" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="228,42"
          Id="Package\Foreach Folder\02-Moove To Work or Anomalie"
          TopLeft="5.50000000000003,209.5" />
        <NodeLayout
          Size="164.5,42"
          Id="Package\Foreach Folder\Launch Main's Job"
          TopLeft="41,311.5" />
        <NodeLayout
          Size="220.5,42"
          Id="Package\Foreach Folder\SQLT004 | File - Folder Status"
          TopLeft="9.25000000000001,107.5" />
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach Folder\Tâche de script"
          TopLeft="45.4428571428571,12.1592128801431" />
        <EdgeLayout
          Id="Package\Foreach Folder.PrecedenceConstraints[Constraint]"
          TopLeft="120.221428571429,54.1592128801431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.3407871198569"
              Start="0,0"
              End="0,45.8407871198569">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.8407871198569" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Folder.PrecedenceConstraints[Constraint 1]"
          TopLeft="119.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Folder.PrecedenceConstraints[Constraint 2]"
          TopLeft="121.375,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="239,408.5"
          Size="239,451.5"
          Id="Package\Foreach Folder"
          TopLeft="5.50000000000007,107.5" />
        <NodeLayout
          Size="132.5,42"
          Id="Package\Get Folders"
          TopLeft="58.75,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="125,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>